!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("rx"),require("can"),require("can.eventstream"));else if("function"==typeof define&&define.amd)define(["rx","can","can.eventstream"],t);else{var r="object"==typeof exports?t(require("rx"),require("can"),require("can.eventstream")):t(e.Rx,e.can,e["can.eventstream"]);for(var n in r)("object"==typeof exports?exports:e)[n]=r[n]}}(this,function(e,t,r){return function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var r={};return t.m=e,t.c=r,t.p="",t(0)}([function(e,t,r){"use strict";function n(e,t,r){return e.isComputed?t[1]:e.getEventValueForStream?e.getEventValueForStream(t,r):t[0]}var o=r(1),u=r(2);r(3),o.Observable.prototype.toCompute=function(){var e=void 0!==arguments[0]?arguments[0]:u.compute();return u.bindComputeFromStream(this,e)},o.Observable.prototype.toMap=function(){var e=void 0!==arguments[0]?arguments[0]:new u.Map;return u.bindMapFromStream(this,e)},o.Observable.prototype.toList=function(){var e=void 0!==arguments[0]?arguments[0]:new u.List;return u.bindListFromStream(this,e)},u.EventStream={},u.EventStream.isEventStream=function(e){return e instanceof o.Observable},u.EventStream.onValue=function(e,t){return e.subscribe(t)},u.EventStream.bind=function(e,t,r){t=null==t?"change":t;var a=o.Observable.fromEventPattern(r?function(n){return u.delegate.call(e,r,t,n)}:function(r){return u.bind.call(e,t,r)},r?function(n){return u.undelegate.call(e,r,t,n)}:function(r){return u.unbind.call(e,t,r)},function(r){return n(e,r,t)});return a},u.EventStream.untilStream=function(e,t){return e.takeUntil(t)}},function(t){t.exports=e},function(e){e.exports=t},function(e){e.exports=r}])});
//# sourceMappingURL=can.rx.min.js.map