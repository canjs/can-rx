!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("rx"),require("can"),require("can.eventstream"));else if("function"==typeof define&&define.amd)define(["rx","can","can.eventstream"],t);else{var n="object"==typeof exports?t(require("rx"),require("can"),require("can.eventstream")):t(e.Rx,e.can,e["can.eventstream"]);for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}(this,function(e,t,n){return function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return e[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";function r(e,t,n){return e.isComputed?t[1]:e.getEventValueForStream?e.getEventValueForStream(t,n):t[0]}var o=n(1),u=n(2);n(3),o.Observable.prototype.toCanCompute=function(){var e=void 0!==arguments[0]?arguments[0]:u.compute();return u.bindComputeFromStream(this,e)},o.Observable.prototype.toCanMap=function(){var e=void 0!==arguments[0]?arguments[0]:new u.Map;return u.bindMapFromStream(this,e)},o.Observable.prototype.toCanList=function(){var e=void 0!==arguments[0]?arguments[0]:new u.List;return u.bindListFromStream(this,e)},u.isEventStream=function(e){return e instanceof o.Observable},u.onEventStreamValue=function(e,t){return e.subscribe(t)},u.bindEventStream=function(e,t,n){t=null==t?"change":t;var a=o.Observable.fromEventPattern(n?function(r){return u.delegate.call(e,n,t,r)}:function(n){return u.bind.call(e,t,n)},n?function(r){return u.undelegate.call(e,n,t,r)}:function(n){return u.unbind.call(e,t,n)},function(n){return r(e,n,t)});return a},u.eventStreamUntil=function(e,t){return e.takeUntil(t)}},function(t){t.exports=e},function(e){e.exports=t},function(e){e.exports=n}])});
//# sourceMappingURL=can.rx.min.js.map